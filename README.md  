# Terraform MongoDB Atlas Project

This Terraform project automates the creation of a MongoDB Atlas project, cluster, and database users. It supports both password-based and AWS IAM-based authentication.

---

## Prerequisites

Before you begin, make sure you have:
1. A **MongoDB Atlas account** and API keys (public and private).
2. An **AWS account** (if using IAM authentication) with an IAM role ARN.
3. **Terraform** installed on your machine.

---

## Setup

1. Clone this repository:
   ```bash
   git clone https://github.com/your-repo/terraform-mongodb.git
   cd terraform-mongodb
   ```

2. Create a `terraform.tfvars` file in the root directory with your configuration:
   ```hcl
   mongodbatlas_public_key  = "your_public_key"
   mongodbatlas_private_key = "your_private_key"
   mongodbatlas_org_id      = "your_org_id"
   project_name             = "my-project"
   cluster_name             = "my-cluster"
   username                 = "myuser"
   password                 = "mypassword"
   iam_username             = "arn:aws:iam::123456789012:role/MongoDBAtlasRole" # Replace with your IAM role ARN
   role_name                = "customRole"
   role_name_iam            = "readAnyDatabase"
   ```

3. Initialize Terraform:
   ```bash
   terraform init
   ```

---

## Usage

1. **Plan the Configuration**:
   ```bash
   terraform plan
   ```

2. **Apply the Configuration**:
   ```bash
   terraform apply
   ```

3. **Destroy Resources** (if needed):
   ```bash
   terraform destroy
   ```

---

## What’s Created

This project creates the following resources in MongoDB Atlas:
- A **project**.
- A **cluster** (free-tier or advanced).
- Two **database users**:
  - One authenticated via username and password.
  - One authenticated via AWS IAM role.
- A **custom database role**.

---

## Outputs

After running `terraform apply`, you’ll get the following outputs:
- **Project ID**: The ID of the MongoDB Atlas project.
- **Cluster ID**: The ID of the MongoDB Atlas cluster.
- **Custom Role Name**: The name of the custom database role.
- **Password User**: The username of the password-authenticated user.
- **IAM User**: The username of the IAM-authenticated user.

---

## Troubleshooting

### Common Issues

1. **Invalid AWS IAM ARN**:
   - Ensure the `iam_username` variable is set to a valid AWS IAM role ARN.

2. **API Key Errors**:
   - Double-check your `mongodbatlas_public_key` and `mongodbatlas_private_key`.

3. **Cluster Creation Failures**:
   - Verify the cluster configuration (e.g., region, instance size) is valid.

---

